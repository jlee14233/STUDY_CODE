## 주유소
'''
문제
어떤 나라에 N개의 도시가 있다. 이 도시들은 일직선 도로 위에 있다. 편의상 일직선을 수평 방향으로 두자. 제일 왼쪽의 도시에서 제일 오른쪽의 도시로 자동차를 이용하여 이동하려고 한다. 인접한 두 도시 사이의 도로들은 서로 길이가 다를 수 있다. 도로 길이의 단위는 km를 사용한다.

처음 출발할 때 자동차에는 기름이 없어서 주유소에서 기름을 넣고 출발하여야 한다. 기름통의 크기는 무제한이어서 얼마든지 많은 기름을 넣을 수 있다. 도로를 이용하여 이동할 때 1km마다 1리터의 기름을 사용한다. 각 도시에는 단 하나의 주유소가 있으며, 도시 마다 주유소의 리터당 가격은 다를 수 있다. 가격의 단위는 원을 사용한다.

예를 들어, 이 나라에 다음 그림처럼 4개의 도시가 있다고 하자. 원 안에 있는 숫자는 그 도시에 있는 주유소의 리터당 가격이다. 도로 위에 있는 숫자는 도로의 길이를 표시한 것이다. 



제일 왼쪽 도시에서 6리터의 기름을 넣고, 더 이상의 주유 없이 제일 오른쪽 도시까지 이동하면 총 비용은 30원이다. 만약 제일 왼쪽 도시에서 2리터의 기름을 넣고(2×5 = 10원) 다음 번 도시까지 이동한 후 3리터의 기름을 넣고(3×2 = 6원) 다음 도시에서 1리터의 기름을 넣어(1×4 = 4원) 제일 오른쪽 도시로 이동하면, 총 비용은 20원이다. 또 다른 방법으로 제일 왼쪽 도시에서 2리터의 기름을 넣고(2×5 = 10원) 다음 번 도시까지 이동한 후 4리터의 기름을 넣고(4×2 = 8원) 제일 오른쪽 도시까지 이동하면, 총 비용은 18원이다.

각 도시에 있는 주유소의 기름 가격과, 각 도시를 연결하는 도로의 길이를 입력으로 받아 제일 왼쪽 도시에서 제일 오른쪽 도시로 이동하는 최소의 비용을 계산하는 프로그램을 작성하시오.

입력
표준 입력으로 다음 정보가 주어진다. 첫 번째 줄에는 도시의 개수를 나타내는 정수 N(2 ≤ N ≤ 100,000)이 주어진다. 다음 줄에는 인접한 두 도시를 연결하는 도로의 길이가 제일 왼쪽 도로부터 N-1개의 자연수로 주어진다. 다음 줄에는 주유소의 리터당 가격이 제일 왼쪽 도시부터 순서대로 N개의 자연수로 주어진다. 제일 왼쪽 도시부터 제일 오른쪽 도시까지의 거리는 1이상 1,000,000,000 이하의 자연수이다. 리터당 가격은 1 이상 1,000,000,000 이하의 자연수이다. 

출력
표준 출력으로 제일 왼쪽 도시에서 제일 오른쪽 도시로 가는 최소 비용을 출력한다. 

서브태스크
번호	배점	제한
1	17	
모든 주유소의 리터당 가격은 1원이다.

2	41	
2 ≤ N ≤ 1,000, 제일 왼쪽 도시부터 제일 오른쪽 도시까지의 거리는 최대 10,000, 리터 당 가격은 최대 10,000이다.

3	42	
원래의 제약조건 이외에 아무 제약조건이 없다.
'''

import sys
from collections import deque

sys.stdin = open('solution/jlee14233/08. Greedy/입력.txt', 'r')

n=int(sys.stdin.readline())

dist=deque(map(int,sys.stdin.readline().strip().split()))
price=deque(map(int,sys.stdin.readline().strip().split()))


'''
비교해야하는 대상?
price * (a1+a2)와 price(a1)+price(a2) 를 비교해서 
price_1 = popleft()
price_2 = popleft()
distance_1= popleft()
distance_2= popleft(dis)

결국 마지막 도시의 금액은 필요 없는거 아님? 프라이스와 거리는 1:1  대응이다.
두번째 도시까지의 최소값을 저장한다, 이후 한 도시가 늘어났을 때 다시
min_Value = min(pri_1*(dis_1+dis_2),pri_1*dis_1+pri_2*dis_2)
그 다음 값은 어떻게 처리를 해야하나?
min_value + pri_2*dis_3 , min_value+pri_3*dis_3 간의 비교를 하면 되는거 아님?

처음 값을 INF로 지정해둔다 INF=10**9이다.

pri_1=popleft()
dis_1=popleft()

min_value= pri_1*dis_1
while price:
    pri_2=popleft()
    dis_2=popleft()
    min_value=(min_value+pri_1*dis_2,min_value+pri_2*dis_2)
    pri_1=pri_2

'''

pri_1=deque.popleft(price)
dis_1=deque.popleft(dist)

min_value=pri_1*dis_1
while dist:
    pri_2=deque.popleft(price)
    dis_2=deque.popleft(dist)
    min_value=min(min_value+pri_1*dis_2,min_value+pri_2*dis_2)
    if pri_1>=pri_2:
        pri_1=pri_2
print(min_value)