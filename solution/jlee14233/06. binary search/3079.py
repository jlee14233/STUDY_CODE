## 입국심사
'''
문제
상근이와 친구들은 오스트레일리아로 여행을 떠났다. 상근이와 친구들은 총 M명이고, 지금 공항에서 한 줄로 서서 입국심사를 기다리고 있다. 입국심사대는 총 N개가 있다. 각 입국심사관이 심사를 하는데 걸리는 시간은 사람마다 모두 다르다. k번 심사대에 앉아있는 심사관이 한 명을 심사를 하는데 드는 시간은 Tk이다.

가장 처음에 모든 심사대는 비어있고, 심사를 할 준비를 모두 끝냈다. 상근이와 친구들은 비행기 하나를 전세내고 놀러갔기 때문에, 지금 심사를 기다리고 있는 사람은 모두 상근이와 친구들이다. 한 심사대에서는 한 번에 한 사람만 심사를 할 수 있다. 가장 앞에 서 있는 사람은 비어있는 심사대가 보이면 거기로 가서 심사를 받을 수 있다. 하지만 항상 이동을 해야 하는 것은 아니다. 더 빠른 심사대의 심사가 끝나길 기다린 다음에 그 곳으로 가서 심사를 받아도 된다.

상근이와 친구들은 모두 컴퓨터 공학과 학생이기 때문에, 어떻게 심사를 받으면 모든 사람이 심사를 받는데 걸리는 시간이 최소가 될지 궁금해졌다.

예를 들어, 두 심사대가 있고, 심사를 하는데 걸리는 시간이 각각 7초와 10초라고 하자. 줄에 서 있는 사람이 6명이라면, 가장 첫 두 사람은 즉시 심사를 받으러 가게 된다. 7초가 되었을 때, 첫 번째 심사대는 비어있게 되고, 세 번째 사람이 그곳으로 이동해서 심사를 받으면 된다. 10초가 되는 순간, 네 번째 사람이 이곳으로 이동해서 심사를 받으면 되고, 14초가 되었을 때는 다섯 번째 사람이 첫 번째 심사대로 이동해서 심사를 받으면 된다. 20초가 되었을 때, 두 번째 심사대가 비어있게 된다. 하지만, 여섯 번째 사람이 그 곳으로 이동하지 않고, 1초를 더 기다린 다음에 첫 번째 심사대로 이동해서 심사를 받으면, 모든 사람이 심사를 받는데 걸리는 시간이 28초가 된다. 만약, 마지막 사람이 1초를 더 기다리지않고, 첫 번째 심사대로 이동하지 않았다면, 모든 사람이 심사를 받는데 걸리는 시간이 30초가 되게 된다.

상근이와 친구들이 심사를 받는데 걸리는 시간의 최솟값을 구하는 프로그램을 작성하시오.

입력
첫째 줄에 N과 M이 주어진다. (1 ≤ N ≤ 100,000, 1 ≤ M ≤ 1,000,000,000)

다음 N개 줄에는 각 심사대에서 심사를 하는데 걸리는 시간인 Tk가 주어진다. (1 ≤ Tk ≤ 109)

출력
첫째 줄에 상근이와 친구들이 심사를 마치는데 걸리는 시간의 최솟값을 출력한다.

심사에 걸리는 시간
우선순위 큐를 활용해야하나?
몫만 따져야함?

'''


import sys
import time

sys.stdin = open('solution/jlee14233/06. binary search/입력.txt', 'r')

n,m= map(int,sys.stdin.readline().strip().split())
simsa= sorted([int(sys.stdin.readline().strip()) for _ in range(n)])

## t또한 큰 수에서 낮은 수로 낮춰가면서 이분탐색을 시전하면 되는거 아닌가? 지금은 순열탐색임. 그렇기 때문에 시간 초과가 발생함
# t=1
# while True:
#     temp=0
#     start=0
#     end=n-1
#     while start<=end:
#         mid=(start+end)//2
#         if simsa[mid] == t:
#             break
#         elif simsa[mid]>t:
#             end=mid-1
#         else:
#             start = mid+1
#     if mid!=0:
#         for _ in simsa:
#             temp=temp+(t//_)
#     if temp>=m:
#         break
#     t+=1

# print(t)
### 아이디어 변경 위는 t를 차례대로 탐색해서 m값과 비교를 했음.
## 아래 t값을 엄청 높은 숫자부터 시작해서 t값을 찾고, 그 t값에 미치지 못할 경우 person값으로 다시 넣어서 m값과 비교

def person(t):
    temp=0
    for _ in simsa:
        temp+=(t//_)
    return temp

t=10**18
start=0
end=t
while start<=end:
    mid=(start+end)//2
    x=person(mid)
    if x>=m:
        end=mid-1
    else:
        start=mid+1
## 이 과정을 통해서 end, mid, start을 알 수 있음. 그 과정에서 수용되는 수를 고르기만 하면 될듯?
## 여기에서 +-2 까지의 범위로 탐색을 해야할듯. 뭔가 위의 과정에서 명확하게 숫자가 나오지 않는 느낌. 애매모호한 숫자로 이분탐색이 되어버린듯.

temp=mid-2
temp_2=mid+2
while temp!=mid:
    if person(temp)>=m:
        print(temp)
        quit()
    temp+=1

while mid!=temp_2:
    if person(mid)>=m:
        print(mid)
        quit()
    mid+=1